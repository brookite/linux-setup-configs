#!/bin/bash

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo apt update
sudo apt dist-upgrade -y

echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –∏–∑ debian_server.lst..."
xargs -a debian_server.lst sudo apt install -y

# –ï—Å–ª–∏ —ç—Ç–æ Raspberry Pi OS ‚Äî —Å—Ç–∞–≤–∏–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
if [ -f /etc/rpi-issue ]; then
  echo "üçì –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ Raspberry Pi OS! –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –∏–∑ raspberry.lst..."
  xargs -a raspberry.lst sudo apt install -y
fi

echo "‚úÖ –ë–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."

# Temurin JDK
echo "‚òï –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Temurin JDK —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
wget -qO - https://packages.adoptium.net/artifactory/api/gpg/key/public | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/adoptium.gpg > /dev/null
echo "deb https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | sudo tee /etc/apt/sources.list.d/adoptium.list

# Docker
echo "üê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Node JS
echo "üü¢ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
\. "$HOME/.nvm/nvm.sh"
nvm install 22
npm config set prefix '~/.local/'
bash npm_install.sh


# Rust
echo "ü¶Ä –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Rust..."
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ JDK, Node –∏ Docker –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–ø
echo "üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Temurin, Node.js –∏ Docker..."
sudo apt-get update
sudo apt install -y temurin-21-jdk temurin-8-jdk
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# Python: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üêç –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ python..."
bash pybuild.sh

# Neovim —Å–±–æ—Ä–∫–∞
echo "üìù –°–±–æ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Neovim..."
git clone --branch stable https://github.com/neovim/neovim
cd neovim
make CMAKE_BUILD_TYPE=Release
cd build
cpack -G DEB
DEB_PKG=$(find . -maxdepth 1 -name "nvim-*.deb" | head -n1)
mv "$DEB_PKG" nvim-linux64.deb
sudo dpkg -i nvim-linux64.deb
cd ../../
sudo rm -rf neovim

# LLVM —É—Å—Ç–∞–Ω–æ–≤–∫–∞
echo "üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ LLVM 20..."
wget https://apt.llvm.org/llvm.sh
chmod u+x llvm.sh
sudo ./llvm.sh 20
rm llvm.sh

echo "üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Go..."
bash install_go.sh

echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
